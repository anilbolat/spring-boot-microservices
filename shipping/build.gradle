plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.anilbolat'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    // observability
    implementation 'org.springframework.boot:spring-boot-starter-actuator'  // enabled endpoints and expose metrics
    implementation "org.springframework.boot:spring-boot-starter-aop"   // For using @Observed on class and enabled @ObservedAspect
    implementation 'io.micrometer:micrometer-registry-prometheus'   // metrics: For Micrometer metrics with Prometheus
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'   // traces: For Tracing Context Propagation with Micrometer Tracing
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin' // traces: For Latency Visualization to send data for traces and spans.
    runtimeOnly 'com.github.loki4j:loki-logback-appender:1.3.2'     // logs: Sends logs to Loki

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}
