# kafka
spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
logging.level.org.apache.kafka=OFF
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.anilbolat.order.model.OrderPlacedEvent

# db
spring.datasource.url=jdbc:postgresql://localhost:5435/postgres
spring.datasource.username=postgres
spring.datasource.password=s3cr3t
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# app
server.port=8091
management.endpoints.web.exposure.include=health, prometheus

spring.application.name=order

# tracing
management.tracing.sampling.probability=1.0
#management.tracing.propagation.type=W3C
#micrometer.observations.annotations.enabled=true

# logs
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


#spring.kafka.bootstrap-servers=glorious-gelding-10482-us1-kafka.upstash.io:9092
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="Z2xvcmlvdXMtZ2VsZGluZy0xMDQ4MiTeY9nEqP4u3K1n0r-FSUUBHMMryZGOWVQ" password="VXLIm1W9UDN7a76YNgX_jcxn_Ox7VKpdo4kiIDC8sfHWwbDeqdKBIa4rL5cZrW8xAQTxIQ==";
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.add.type.headers=false
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.url=jdbc:postgresql://my-release-postgresql.default.svc.cluster.local:5432/postgres
#spring.datasource.username=postgres
#spring.jpa.hibernate.ddl-auto=update
#management.endpoints.web.exposure.include=health